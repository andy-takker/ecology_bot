version: '3.9'
services:
  database:
    image: postgres:13.4-buster
    restart: always
    volumes:
      - ./database/data:/var/lib/postgresql/data
      - ./database/backups:/backups
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_HOST: ${POSTGRES_HOST:-database}

  redis:
    image: redis
    restart: always
    command: "redis-server --requirepass ${REDIS_PASSWORD:-password}"
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data

  bot:
    image: bot
    depends_on:
      - database
      - redis
      - worker
    command: python3 cli.py
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}

      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      ADMINS: ${ADMINS}
    privileged: true

  worker:
    image: bot
    depends_on:
      - database
      - redis
    command: celery -A workers.celery worker -l INFO
    restart: always
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}

      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      ADMINS: ${ADMINS}

volumes:
  redis_data:
    driver: local